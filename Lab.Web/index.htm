<!DOCTYPE html>

<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Lab</title>
  <link href="/content/css/foundation.css" rel="stylesheet"/>
  <link href="/content/css/app.css" rel="stylesheet"/>
</head>
<body>
  <div id="app">
    <div class="banner">Lab</div>
    <div class="container">
      <div id="main"></div>  
    </div>
  </div>

  <!-- Decks Index -->

  <script id="decks-index-layout" type="text/html">
    <div id="decks-index-region"></div>
  </script>

  <script id="decks-index-template" type="text/html">
    <form action="/decks" method="POST">
      <input type="text" />
      <input type="submit" class="button" />
    </form>
    <table>
      <thead>
        <tr>
          <th>Title</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </script>

  <script id="decks-table-row-template" type="text/html">
    <td><a class="small alert button delete">x</a> <a href="#decks/<%= id %>/edit"><%= title %></a></td>  
  </script>

  <!-- Decks Edit -->

  <script id="deck-edit-layout" type="text/html">
    <div id="deck-edit-region"></div>
  </script>

  <script id="deck-edit-template" type="text/html">
  <div class="counter">
    <span class="counter-at">0</span>/
    <span class="counter-of">0</span>
  </div>

  <a class="button small add">Add Card</a>
  <form>
    <label>Caption</label>
    <textarea name="content"></textarea>

    <label>Url</label>
    <input type="text" name="url"></textarea>

    <a class="small button">Background</a>
  </form>
  <a class="button small prev">&laquo;</a>
  <a class="button small next">&raquo;</a>
  </script>

  <script src="/content/js/lib/jquery.js"></script>
  <script src="/content/js/lib/underscore.js"></script>
  <script src="/content/js/lib/backbone.js"></script>
  <script src="/content/js/lib/backbone.marionette.js"></script>
  <script src="/content/js/data.js"></script>

  <script>

  /* App
  /******************************/
  var App = new Backbone.Marionette.Application();

  App.addRegions({ content: "#main" });

  /* Models
  /******************************/
  var Deck = Backbone.Model.extend({
    url:function(){
      var url = '/decks', id = this.get('id');
      id && (url += ('/'+id))
      return url;
    }  
  });

  var Card = Backbone.Model.extend({});
  var Image = Backbone.Model.extend({});

  /* Collections
  /******************************/
  var DeckCollection = Backbone.Collection.extend({
    url:'/decks',
    model: Deck    
  });


  /* Views [Decks Index]
  /******************************/
  var DecksIndexLayout = Backbone.Marionette.Layout.extend({
    template: '#decks-index-layout',

    regions: {
      decks: '#decks-index-region'
    },

    initialize: function(){
      var collection = new DeckCollection();      
        
      collection.fetch();
      
      this.collection = collection;
    },

    onRender:function(){
      var view = new DecksIndexView({ collection: this.collection });      
      this.decks.show( view );
    }
  });

  var DecksTableRowView = Backbone.Marionette.ItemView.extend({
    tagName:'tr',
    template: '#decks-table-row-template',
    events: { 
      'click .delete' : 'deleteDeck' 
    },
    deleteDeck: function(){
      this.model.destroy();
    }
  });

  var DecksIndexView = Backbone.Marionette.CompositeView.extend({
    className:'decks-index',
    itemView: DecksTableRowView,
    template: '#decks-index-template',

    events: {
      'submit':'createDeck'
    },

    ui: {
      input:"[type='text']"
    },

    createDeck: function(){
      var input = this.ui.input,
          model = new Deck(),
          view = this;

      model.save({title:input.val()})
           .done(function(){ view.collection.add(model); })

      input.val('');
      input.focus();

     return false;
    },

    appendHtml: function(collectionView, itemView){
      collectionView.$('tbody').append(itemView.el);
    }
  });

  /* Views [Decks Edit]
  /******************************/
  var DecksEditLayout = Backbone.Marionette.Layout.extend({
    template: '#deck-edit-layout',

    regions: {
      decks: '#deck-edit-region'
    },

    onRender:function(){
      var view = new DecksEditView({ model: this.model });      
      this.decks.show( view );
    }
  });


  var DecksEditView = Backbone.Marionette.ItemView.extend({
    className:'decks-edit',
    itemView: DecksTableRowView,
    template: '#deck-edit-template'
  });

  /* Controllers
  /******************************/
  var DecksController = {
    index: function(){
      App.content.show( new DecksIndexLayout() );
    },
    edit: function(id){
      var model = new Deck();      
      model.fetch({id:id}).done(function(){
        App.content.show( new DecksEditLayout({model:model}) );
      });      
    }
  };

  /* Routers
  /******************************/  
  var DecksRouter = Backbone.Marionette.AppRouter.extend({
    controller: DecksController,
    appRoutes: {
      "decks/:id/edit" : "edit",
      "decks" : "index"
    }
  });


  /* Initialize
  /******************************/
  App.on("initialize:after", function(){    
    new DecksRouter();
    Backbone.history.start({silent:false});
  });

  App.start();
</script>  

</body>
</html>
